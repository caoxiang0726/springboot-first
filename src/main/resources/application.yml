my:           #这一层级肯定要能写多个
  name: cx
  age: 20     #必须要属性名idea中为黄色（比如冒号后面空一个才变黄）
  #famliy:    #这里好像不支持多级
    #mother: yym
#################### kafka case 1
#spring:
#  profiles:
#    active: dev
#  kafka:
#    bootstrap-servers: 192.168.179.128:9092
#    consumer:
#      group-id: springboot-group1
#      auto-offset-reset: earliest

#####################kafka case2
spring:
  profiles:
    active: dev
  kafka:
    # kafka服务器地址(可以多个)
    bootstrap-servers: 192.168.179.128:9092
    consumer:
      # 指定一个默认的组名
      group-id: kafka2
      # earliest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，从头开始消费
      # latest:当各分区下有已提交的offset时，从提交的offset开始消费；无提交的offset时，消费新产生的该分区下的数据
      # none:topic各分区都存在已提交的offset时，从offset后开始消费；只要有一个分区不存在已提交的offset，则抛出异常
      auto-offset-reset: earliest
      # key/value的反序列化
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      # key/value的序列化
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 批量抓取
      batch-size: 65536
      # 缓存容量
      buffer-memory: 524288
      # 服务器地址
      bootstrap-servers: 192.168.179.128:9092




